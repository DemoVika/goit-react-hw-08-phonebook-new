{"version":3,"file":"static/js/222.e03de929.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"button\":\"ContactForm_button__eSwX9\"};","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectAllContacts);\n  const dispath = useDispatch();\n\n  const handleInput = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const nameId = event => {\n    event.preventDefault();\n    if (contacts.find(item => item.name === name)) {\n      alert(`${name} is already in contacts`);\n\n      return;\n    }\n    const contact = {\n      name, //: name\n      number, //: number\n    };\n    dispath(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.container} onSubmit={nameId}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInput}\n        />\n      </label>{' '}\n      <br />\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInput}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"button\":\"ContactList_button__7kL4l\"};","// import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst visibleContacts = (contacts, filter) => {\n  return contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  const dispath = useDispatch();\n  const handleDeleteItems = id => {\n    dispath(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.list}>\n      {visibleContacts(contacts, filter).map(item => {\n        return (\n          <li key={item.id}>\n            {item.name} {item.number}{' '}\n            <button\n              className={css.button}\n              type=\"button\"\n              onClick={() => handleDeleteItems(item.id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n// ContactList.protoTypes = {\n//   contacts: PropTypes.arrayOf({\n//     name: PropTypes.string.isRequired,\n//     id: PropTypes.string.isRequired,\n//     number: PropTypes.string.isRequired,\n//   }),\n//   filter: PropTypes.string.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from 'redux/contacts/slice';\n\nexport const Filter = () => {\n  const dispath = useDispatch();\n  const updateFilter = filter => {\n    dispath(setFilter(filter));\n  };\n  return (\n    <label className={css.filter}>\n      Find contacts by name <br />\n      <input\n        className={css.input}\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={event => {\n          updateFilter(event.currentTarget.value);\n        }}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter />\n      <h2>Your contacts</h2>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","ContactForm","useState","name","setName","number","setNumber","useSelector","dispath","useDispatch","handleInput","event","currentTarget","value","className","css","onSubmit","preventDefault","find","item","alert","contact","addContact","type","pattern","title","required","onChange","visibleContacts","toLowerCase","includes","ContactList","map","onClick","id","deleteContact","Filter","setFilter","Contacts","dispatch","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}